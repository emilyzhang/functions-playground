import type { Context } from './context';
import type { Event } from './event';
import type { Response, BuilderResponse } from './response';
export interface HandlerCallback {
    (error: any, response: Response): void;
}
export interface Handler {
    (event: Event, context: Context, callback: HandlerCallback): void | Response | Promise<Response>;
}
export interface BuilderCallback {
    (error: any, response: BuilderResponse): void;
}
export interface BuilderHandler {
    (event: Event, context: Context, callback: BuilderCallback): void | BuilderResponse | Promise<BuilderResponse>;
}
