import type { Context } from './context';
import type { Event } from './event';
import type { Response, BuilderResponse } from './response';
export interface HandlerCallback<TResponse> {
    (error: any, response: TResponse): void;
}
interface BaseHandler<TResponse> {
    (event: Event, context: Context, callback: HandlerCallback<TResponse>): void | TResponse | Promise<TResponse>;
}
export declare type Handler = BaseHandler<Response>;
export declare type BuilderHandler = BaseHandler<BuilderResponse>;
export {};
